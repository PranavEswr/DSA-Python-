***** Notes *****
Brute Force => Two for loops and compare with each and every numbers 
Complexity Time-O(N^2) Space-O(1)

Better => Sort the array and check for the neighbouring elements
Complexty Time-O(NlogN) Space-O(1)

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        nums.sort()
        for i in range(len(nums)-1):
            if nums[i] == nums[i+1]:
                return True
        return False

Best => Hashmap
Complexity Time-O(N) Space-O(N)


***** Solution *****
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        hashmap = dict()
        for num in nums:
            if num in hashmap:
                return True
            hashmap[num] = True
        return False

Using set()
class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:
        seen = set()
        for num in nums:
            if num in seen:
                return True
            seen.add(num)
        return False
